file -f -new;
float $buckyRadius = 100.001;
float $buckySideLength = 40.36;
float $buckyMultiple = 1.95;
float $buckyMutation = 0.75;
int $buckyGlazeFace[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,18,20,21,23,26,30};
int $buckySunFace[] = {14,15,17,19,22,24,25,27,28,29,31};

int $count = 0;
int $balls = 1;
int $siteX = $buckyRadius * $balls / 2 + $buckyRadius * 2;
int $siteY = $buckyRadius * $balls / 2 + $buckyRadius * 2;
string $bucky[];
string $groundPlane[];
int $moveBuckyDist[];
float $baselineArea[];

while ($count < $balls) {
	$bucky = makeBucky($buckyRadius,$buckyMultiple,$buckySideLength,$count);
	cloneBucky($bucky[0],$buckyGlazeFace,$buckySunFace);
	$baselineArea = getBuckyArea($bucky[0],$buckyGlazeFace,$buckySunFace);
	cleanClones($bucky[0]);
	mutateBucky($buckyMutation,$bucky[0]);
	//$moveBuckyDist = moveBucky($siteX,$siteY,$bucky[0]);
	cloneBucky($bucky[0],$buckyGlazeFace,$buckySunFace);
	evaluateBucky($bucky[0]);
	//cleanClones($bucky[0]);
	$count++;
}
$groundPlane = makeGroundPlane($siteX,$siteY);
viewSet -fit -ff 0.8 -krs true -an 1 -p;


proc void cleanClones($buckyName) {
	echoEval("delete " + $buckyName + "Sun " + $buckyName + "Glaze");
}

proc float[] getBuckyArea(string $buckyName, int $buckyGlazeFace[], int $buckySunFace[]) {
	float $baselineAreaSun[];
	float $baselineAreaGlaze[];
	$baselineAreaSun[] = evalEcho("polyEvaluate -a " + $buckyName + "Sun");
	$baselineAreaGlaze[] = evalEcho("polyEvaluate -a " + $buckyName + "Glaze");
	$baselineArea[0] = $baselineAreaSun[0];
	$baselineArea[1] = $baselineAreaGlaze[0];	
	return $baselineArea;
}	

proc void cloneBucky(string $buckyName, int $buckyGlazeFace[], int $buckySunFace[]) {
	int $cloneCount = 0;
	
	evalEcho("select -r " + $buckyName);
	evalEcho("duplicate -rr -name " + $buckyName + "Sun");
	evalEcho("select -r " + $buckyName);
	evalEcho("duplicate -rr -name " + $buckyName + "Glaze");
	while ($cloneCount < size($buckyGlazeFace)) {
		evalEcho("delete " + $buckyName + "Sun.f[" + $buckyGlazeFace[$cloneCount] + "["); 	
		$cloneCount++;
	}
	$cloneCount = 0;
	while ($cloneCount < size($buckySunFace)) {
		evalEcho("delete " + $buckyName + "Glaze.f[" + $buckySunFace[$cloneCount] + "["); 	
		$cloneCount++;
	}
}

proc mutateBucky(float $buckyMutation, string $buckyName) {

}

proc int evaluateBucky(string $buckyName) {
	int $success = 0;
	float $buckyTotalArea[] = evalEcho("polyEvaluate -a " + $buckyName);
	float $buckySunArea[] = evalEcho("polyEvaluate -a " + $buckyName + "Sun");
	float $buckyGlazeArea[] = evalEcho("polyEvaluate -a " + $buckyName + "Glaze");
	return $success;
}

proc string[] makeBucky(int $buckyRadius, int $buckyMultiple, float $buckySideLength, int $count) {
	float $sizeBucky = rand($buckyMultiple);
	string $buckyName[] = evalEcho("polyPrimitive -name bucky00" + $count + " -object 1 -r " + ($buckyRadius * $sizeBucky) + " -l " + ($buckySideLength * $sizeBucky));
	return $buckyName;
}

proc int[] moveBucky(int $siteX, int $siteY, string $buckyName) {
	int $moveBuckyDist[];
	$moveBuckyDist[0] = rand($siteX);
	$moveBuckyDist[1] = rand($siteY);
	evalEcho("move -r $moveBuckyDist[0] $moveBuckyDist[1] 0 " + $buckyName);
	return $moveBuckyDist;
}

proc string[] makeGroundPlane(int $siteX, int $siteY) {
	string $groundPlane[] = evalEcho("polyCube -w " + $siteX + " -h " + $siteY + " -n groundplane");
	evalEcho("move -r " + ($siteX/2) + " " + ($siteY/2) + " 0 groundplane");
	return $groundPlane;
}
