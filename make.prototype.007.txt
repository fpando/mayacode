file -f -new;
int $makeGround = 0;
string $saveDir = "\"C:\/Documents and Settings\/lamp\/My\ Documents\/2008.M.Arch.Studio.VI\/StudioVI\/experiment.001\/";
float $buckyRadius = 100.001;
float $buckySideLength = 40.36;
float $buckyMultiple = 1.95;
float $buckyMutation = 22.75;
int $buckyEdges = 90;
int $buckyVerts = 60;
int $buckyGlazeFace[] = {0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,18,20,21,23,26,30};
int $buckySunFace[] = {14,15,17,19,22,24,25,27,28,29,31};
int $count = 0;
int $balls = 10;
int $siteX = $buckyRadius * $balls / 2 + $buckyRadius * 2;
int $siteY = $buckyRadius * $balls / 2 + $buckyRadius * 2;
string $bucky[];
string $groundPlane[];
int $moveBuckyDist[];
float $baselineArea[];
float $mutatedArea[];
float $mutation[];
int $facets;
int $clean;
int $success;
int $backup;
string $rendered[];
string $hide[];
string $saved[];

while ($count < $balls) {
	$success = 0;
	$bucky = makeBucky($buckyRadius,$buckyMultiple,$buckySideLength,$count);
	$facets = cloneBucky($buckyGlazeFace,$buckySunFace,$bucky[0]);
	$baselineArea = getBuckyArea($bucky[0],$buckyGlazeFace,$buckySunFace);
	$clean = cleanClones($bucky[0]);
	$mutation = mutateBucky($buckyMutation,$bucky[0],$buckyEdges,$buckyVerts);
	$facets = cloneBucky($buckyGlazeFace,$buckySunFace,$bucky[0]);
	$mutatedArea = getBuckyArea($bucky[0],$buckyGlazeFace,$buckySunFace);
	$success = evaluateBucky($bucky[0],$baselineArea,$mutatedArea);
	if ($success) {
		if ($makeGround) { $groundPlane = makeGroundPlane($siteX,$siteY); }
		viewSet -fit -ff 0.8 -krs true -an 1 -p; 
		$rendered = renderFrame($bucky[0],$saveDir);
		//$hide = setHidden($bucky[0]);
		//$saved = saveMaya($bucky[0],$saveDir);
		$count++;
	}
	else {
		delete($bucky[0]); 
		$clean = cleanClones($bucky[0]);
	}
}



// subroutines //

proc string[] renderFrame(string $buckyName, string $saveDir) {
	string $rendered[];
	string $fullpath = "\"" +$saveDir + $buckyName + ".jpg\"";
	setAttr defaultRenderGlobals.imageFormat 8;
	//CreateAmbientLight;
	RenderIntoNewWindow;
	renderWindowSaveImageCallback ("renderWindowPanel1") ($fullpath) ("JPEG");

	//$rendered = eval("renderWindowSaveImageCallback renderWindowPanel1 " + $fullpath + " JPEG");
	return $rendered;
}

proc string[] saveMaya(string $buckyName, string $saveDir) {
	string $saved[];
	$saved[0] = evalEcho("file -rename " + $buckyName + ".mb");
	$saved[1] = evalEcho("file -f -save -options \"v=0;p=17\" -type \"mayaBinary\"");
	return $saved;
}

proc string[] setHidden(string $buckyName) {
	string $hide[];
	return $hide;
}

proc string[] getImage(string $buckyName) {
	string $image[];
	return $image;
}

proc int evaluateBucky(string $buckyName, float $baselineArea[], float $mutatedArea[]) {
	int $success = 0;
	float $buckyArea = $baselineArea[0] - $mutatedArea[0];
	float $sunArea = $baselineArea[1] - $mutatedArea[1];
	if ($buckyArea < 0 && $sunArea > 0) { $success++; } 
	return $success;
}

proc float[] mutateBucky(float $buckyMutation, string $buckyName, int $buckyEdges, int $buckyVerts) {
	int $count = 0;
	float $mutation[]; 
	while ($count < $buckyEdges) {
		$mutation[0] = rand($buckyMutation);
		$mutation[1] = rand($buckyMutation);
		$mutation[2] = rand($buckyMutation);
		eval("select -r " + $buckyName + ".e[" + $count + "]");
		eval("move -r " + $mutation[0] + " 0 0 " + $buckyName + ".e[" + $count + "]");
		eval("move -r " + $mutation[1] + " 0 0 " + $buckyName + ".e[" + $count + "]");
		eval("move -r " + $mutation[2] + " 0 0 " + $buckyName + ".e[" + $count + "]");
		$count++;
	}
	$count = 0;
	while ($count < $buckyVerts) {
		$mutation[0] = rand($buckyMutation);
		$mutation[1] = rand($buckyMutation);
		$mutation[2] = rand($buckyMutation);
		eval("select -r " + $buckyName + ".vtx[" + $count + "]");
		eval("move -r " + $mutation[0] + " 0 0 " + $buckyName + ".vtx[" + $count + "]");
		eval("move -r " + $mutation[1] + " 0 0 " + $buckyName + ".vtx[" + $count + "]");
		eval("move -r " + $mutation[2] + " 0 0 " + $buckyName + ".vtx[" + $count + "]");
		$count++;
	}
	return $mutation;
}

proc int cloneBucky(int $buckyGlazeFace[], int $buckySunFace[], string $buckyName) {
	int $cloneCountSun = 0;
	int $cloneCountGlaze = 0;
	string $tmp;
	eval("select -r " + $buckyName);
	eval("duplicate -rr -name " + $buckyName + "Sun");
	eval("select -r " + $buckyName);
	eval("duplicate -rr -name " + $buckyName + "Glaze");
	$tmp = "delete ";
	while ($cloneCountGlaze < size($buckyGlazeFace)) {
		$tmp = $tmp + $buckyName + "Sun.f[" + $buckyGlazeFace[$cloneCountGlaze] + "] "; 	
		$cloneCountGlaze++;
	}
	eval($tmp);
	$tmp = "delete ";
	while ($cloneCountSun < size($buckySunFace)) {
		$tmp = $tmp + $buckyName + "Glaze.f[" + $buckySunFace[$cloneCountSun] + "] "; 	
		$cloneCountSun++;
	}
	eval($tmp);
	return $cloneCountSun;
}

proc string[] makeGroundPlane(int $siteX, int $siteY) {
	string $groundPlane[] = eval("polyCube -w " + $siteX + " -h " + $siteY + " -n groundplane");
	eval("move -r " + ($siteX/2) + " " + ($siteY/2) + " 0 groundplane");
	return $groundPlane;
}

proc string[] makeBucky(int $buckyRadius, int $buckyMultiple, float $buckySideLength, int $count) {
	float $sizeBucky = rand($buckyMultiple);
	string $buckyName[] = eval("polyPrimitive -name bucky00" + $count + " -object 1 -r " + ($buckyRadius * $sizeBucky) + " -l " + ($buckySideLength * $sizeBucky));
	return $buckyName;
}

proc float[] getBuckyArea(string $buckyName, int $buckyGlazeFace[], int $buckySunFace[]) {
	float $Area[] = eval("polyEvaluate -a " + $buckyName);
	float $AreaSun[] = eval("polyEvaluate -a " + $buckyName + "Sun");
	float $AreaGlaze[] = eval("polyEvaluate -a " + $buckyName + "Glaze");
	$Area[1] = $AreaSun[0];
	$Area[2] = $AreaGlaze[0];	
	return $Area;
}	

proc int cleanClones(string $buckyName) { 
	int $clean = 0;
	eval("delete " + $buckyName + "Sun"); $clean++; 
 	eval("delete " + $buckyName + "Glaze"); $clean++; 
	return $clean;
}

proc int[] moveBucky(int $siteX, int $siteY, string $buckyName) {
	int $moveBuckyDist[];
	$moveBuckyDist[0] = rand($siteX);
	$moveBuckyDist[1] = rand($siteY);
	eval("move -r $moveBuckyDist[0] $moveBuckyDist[1] 0 " + $buckyName + " " + $buckyName + "Sun " + $buckyName + "Glaze");
	return $moveBuckyDist;
}


